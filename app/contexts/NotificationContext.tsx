'use client';

import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';

// „ÅäÁü•„Çâ„Åõ„Çø„Ç§„Éó„ÅÆÂÆöÁæ©
export type NotificationType = '„Ç≠„É£„É≥„Éö„Éº„É≥' | 'ÈáçË¶Å' | '„Ç∑„Çπ„ÉÜ„É†' | '„Ç§„Éô„É≥„Éà';

// „ÅäÁü•„Çâ„Åõ„ÅÆÂûãÂÆöÁæ©
export interface Notification {
  id: string;
  type: NotificationType;
  title: string;
  content: string;
  date: string;
  isRead: boolean;
  imageUrl?: string;
}

// „Ç≥„É≥„ÉÜ„Ç≠„Çπ„Éà„ÅÆÂûãÂÆöÁæ©
interface NotificationContextType {
  notifications: Notification[];
  unreadCount: number;
  markAsRead: (id: string) => void;
  markAllAsRead: () => void;
  addNotification: (notification: Notification) => void;
}

// „Éá„Éï„Ç©„É´„ÉàÂÄ§
const defaultContext: NotificationContextType = {
  notifications: [],
  unreadCount: 0,
  markAsRead: () => {},
  markAllAsRead: () => {},
  addNotification: () => {},
};

// „Ç≥„É≥„ÉÜ„Ç≠„Çπ„Éà‰ΩúÊàê
const NotificationContext = createContext<NotificationContextType>(defaultContext);

// „Ç≥„É≥„ÉÜ„Ç≠„Çπ„Éà„Éó„É≠„Éê„Ç§„ÉÄ„Éº„ÅÆÂûã
interface NotificationProviderProps {
  children: ReactNode;
}

// ÂàùÊúü„ÅäÁü•„Çâ„Åõ„Éá„Éº„Çø
const initialNotifications: Notification[] = [
  {
    id: '1',
    type: '„Ç≠„É£„É≥„Éö„Éº„É≥',
    title: '„Äê„Åô„ÅêÂá∫‰ºö„ÅÑ„Åü„ÅÑ‰∫∫Âêë„Åë„Äë‰ªä„Å™„ÇâÁâπÂà•‰æ°Ê†ºÔºÅÊúÄÁü≠„ÅßÂá∫‰ºö„Åà„Çã„Ç¥„Éº„É´„Éâ„Ç™„Éó„Ç∑„Éß„É≥üíñ',
    content: 'ÊúüÈñìÈôêÂÆö„Åß„Ç¥„Éº„É´„Éâ„Ç™„Éó„Ç∑„Éß„É≥„Åå50%OFFÔºÅ‰ªä„Åô„ÅêÊ∞ó„Å´„Å™„ÇãÁõ∏Êâã„Å®‰ºö„Åà„ÇãÁâπÂà•„Å™Ê©ü‰ºö„Åß„Åô„ÄÇ',
    date: '2025-03-08 12:00',
    isRead: false,
    imageUrl: '/images/gold-campaign.jpg'
  },
  {
    id: '2',
    type: '„Ç≠„É£„É≥„Éö„Éº„É≥',
    title: '„Äê„ÇÇ„ÅÜÊôÇÈñì„ÇíÁÑ°ÈßÑ„Å´„Åó„Å™„ÅÑ„Äë‰ªä„Å™„ÇâÊ†ºÂÆâ„ÅßÂãïÁîªË¶ãÊîæÈ°åÔºÅÔºÅÂèÇ„Çè„Å™„Åè„Å¶„ÇÇË≤¥„ÇÑË©±„ÅóÊñπ„ÇíË¶ã„Çå„Å°„ÇÉ„ÅÜüåü‚ú®',
    content: 'ÊúüÈñìÈôêÂÆö„ÅßÂãïÁîª„Çµ„Éº„Éì„Çπ„ÅåÊ†ºÂÆâ„Å´ÔºÅÁõ∏Êâã„ÅÆÁ¥†È°î„ÇíÁ¢∫Ë™ç„Åó„Å¶ÂÆâÂøÉ„Åó„Å¶„Éû„ÉÉ„ÉÅ„É≥„Ç∞„Åó„Åæ„Åó„Çá„ÅÜ„ÄÇ',
    date: '2025-03-07 18:00',
    isRead: false,
    imageUrl: '/images/gold-campaign.jpg'
  },
  {
    id: '3',
    type: 'ÈáçË¶Å',
    title: '„Äå„ÅÑ„ÅÑ„Å≠ÔºÅ„Äç‰ªïÊßòÂ§âÊõ¥„ÅÆ„ÅäÁü•„Çâ„Åõ',
    content: '„Çà„ÇäÂø´ÈÅ©„Å™„Éû„ÉÉ„ÉÅ„É≥„Ç∞‰ΩìÈ®ì„ÅÆ„Åü„ÇÅ„Å´„Äå„ÅÑ„ÅÑ„Å≠ÔºÅ„ÄçÊ©üËÉΩ„ÅÆ‰ªïÊßò„ÇíÂ§âÊõ¥„Åó„Åæ„Åó„Åü„ÄÇË©≥Á¥∞„ÅØ„Åì„Å°„Çâ„ÄÇ',
    date: '2025-03-06 18:00',
    isRead: true
  },
  {
    id: '4',
    type: '„Ç∑„Çπ„ÉÜ„É†',
    title: '„ÇÑ„Çä„Å®„Çä„Åó„Å¶„ÅÑ„Çã„ÅäÁõ∏Êâã„Å´„Å§„ÅÑ„Å¶',
    content: '„Çµ„Éº„Éì„Çπ„ÅÆÂÅ•ÂÖ®„Å™ÈÅãÂñ∂„ÅÆ„Åü„ÇÅ„Å´„ÄÅ„ÇÑ„Çä„Å®„Çä„ÅÆÈöõ„ÅÆÊ≥®ÊÑèÁÇπ„Çí„ÅîÁ¢∫Ë™ç„Åè„Å†„Åï„ÅÑ„ÄÇ',
    date: '2025-03-04 16:08',
    isRead: true
  },
  {
    id: '5',
    type: '„Ç§„Éô„É≥„Éà',
    title: '„Äå„Ç≥„Ç§„É≥„Éê„ÉÉ„ÇØ„ÉÅ„É£„É¨„É≥„Ç∏„ÄçÊú¨Êó•„Çπ„Çø„Éº„ÉàÔºÅ‚ú®‰ΩøÁî®„Ç≥„Ç§„É≥ÂÖ®È°çÈÇÑÂÖÉ üí∞',
    content: 'ÊúüÈñì‰∏≠„Å´„Ç≥„Ç§„É≥„Çí‰Ωø„ÅÜ„Å®„ÄÅ‰ΩøÁî®È°ç„Å´Âøú„Åò„Å¶„Ç≥„Ç§„É≥„ÅåÈÇÑÂÖÉ„Åï„Çå„Åæ„Åô„ÄÇÊòØÈùû„ÅîÂèÇÂä†„Åè„Å†„Åï„ÅÑÔºÅ',
    date: '2025-03-01 00:00',
    isRead: false
  },
  {
    id: '6',
    type: '„Ç∑„Çπ„ÉÜ„É†',
    title: '„ÇÑ„Çä„Å®„Çä„Åó„Å¶„ÅÑ„Çã„ÅäÁõ∏Êâã„Å´„Å§„ÅÑ„Å¶',
    content: '„Çµ„Éº„Éì„Çπ„ÅÆÂÅ•ÂÖ®„Å™ÈÅãÂñ∂„ÅÆ„Åü„ÇÅ„Å´„ÄÅ„ÇÑ„Çä„Å®„Çä„ÅÆÈöõ„ÅÆÊ≥®ÊÑèÁÇπ„Çí„ÅîÁ¢∫Ë™ç„Åè„Å†„Åï„ÅÑ„ÄÇ',
    date: '2025-02-28 07:47',
    isRead: true
  },
  {
    id: '7',
    type: '„Ç∑„Çπ„ÉÜ„É†',
    title: '„ÇÑ„Çä„Å®„Çä„Åó„Å¶„ÅÑ„Çã„ÅäÁõ∏Êâã„Å´„Å§„ÅÑ„Å¶',
    content: '„Çµ„Éº„Éì„Çπ„ÅÆÂÅ•ÂÖ®„Å™ÈÅãÂñ∂„ÅÆ„Åü„ÇÅ„Å´„ÄÅ„ÇÑ„Çä„Å®„Çä„ÅÆÈöõ„ÅÆÊ≥®ÊÑèÁÇπ„Çí„ÅîÁ¢∫Ë™ç„Åè„Å†„Åï„ÅÑ„ÄÇ',
    date: '2025-02-27 12:28',
    isRead: true
  },
];

// ÈÄöÁü•„Éó„É≠„Éê„Ç§„ÉÄ„Éº„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà
export const NotificationProvider = ({ children }: NotificationProviderProps) => {
  const [notifications, setNotifications] = useState<Notification[]>([]);
  const [unreadCount, setUnreadCount] = useState(0);

  // ÂàùÊúü„Éá„Éº„Çø„É≠„Éº„ÉâÔºàÂÆüÈöõ„ÅÆ„Ç¢„Éó„É™„Åß„ÅØAPI„Åã„Çâ„Éï„Çß„ÉÉ„ÉÅ„Åô„ÇãÔºâ
  useEffect(() => {
    // „É≠„Éº„Ç´„É´„Çπ„Éà„É¨„Éº„Ç∏„Åã„ÇâÊó¢Â≠ò„ÅÆÈÄöÁü•„ÇíÂèñÂæó
    const storedNotifications = localStorage.getItem('notifications');
    
    if (storedNotifications) {
      const parsedNotifications = JSON.parse(storedNotifications);
      setNotifications(parsedNotifications);
      updateUnreadCount(parsedNotifications);
    } else {
      // ÂàùÂõû„ÅÆ„ÅøÂàùÊúü„Éá„Éº„Çø„Çí‰ΩøÁî®
      setNotifications(initialNotifications);
      updateUnreadCount(initialNotifications);
      localStorage.setItem('notifications', JSON.stringify(initialNotifications));
    }
  }, []);

  // Êú™Ë™≠Êï∞„ÅÆÊõ¥Êñ∞
  const updateUnreadCount = (notifs: Notification[]) => {
    const count = notifs.filter(notification => !notification.isRead).length;
    setUnreadCount(count);
  };

  // Âçò‰∏Ä„ÅÆ„ÅäÁü•„Çâ„Åõ„ÇíÊó¢Ë™≠„Å´„Åô„Çã
  const markAsRead = (id: string) => {
    const updatedNotifications = notifications.map(notification => 
      notification.id === id ? { ...notification, isRead: true } : notification
    );
    setNotifications(updatedNotifications);
    updateUnreadCount(updatedNotifications);
    localStorage.setItem('notifications', JSON.stringify(updatedNotifications));
  };

  // „Åô„Åπ„Å¶„ÅÆ„ÅäÁü•„Çâ„Åõ„ÇíÊó¢Ë™≠„Å´„Åô„Çã
  const markAllAsRead = () => {
    const updatedNotifications = notifications.map(notification => ({
      ...notification,
      isRead: true
    }));
    setNotifications(updatedNotifications);
    updateUnreadCount(updatedNotifications);
    localStorage.setItem('notifications', JSON.stringify(updatedNotifications));
  };

  // Êñ∞„Åó„ÅÑ„ÅäÁü•„Çâ„Åõ„ÇíËøΩÂä†„Åô„Çã
  const addNotification = (notification: Notification) => {
    const updatedNotifications = [notification, ...notifications];
    setNotifications(updatedNotifications);
    updateUnreadCount(updatedNotifications);
    localStorage.setItem('notifications', JSON.stringify(updatedNotifications));
  };

  return (
    <NotificationContext.Provider 
      value={{ 
        notifications, 
        unreadCount, 
        markAsRead, 
        markAllAsRead,
        addNotification
      }}
    >
      {children}
    </NotificationContext.Provider>
  );
};

// „Ç´„Çπ„Çø„É†„Éï„ÉÉ„ÇØ
export const useNotification = () => useContext(NotificationContext);
